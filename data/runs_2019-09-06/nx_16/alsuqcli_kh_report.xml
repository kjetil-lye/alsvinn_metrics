<?xml version="1.0" encoding="utf-8"?>
<report><software>alsvinn https://github.com/alsvinn</software><softwareVersion>0.5.3</softwareVersion><currentWorkingDirectory>/scratch/snx3000/klye/alsvinn_metrics/configs/nx_16</currentWorkingDirectory><operatingSystem>Linux: Linux 4.4.103-6.38_4.0.153-cray_ari_c #1 SMP Thu Nov 1 16:05:05 UTC 2018 (6ef8fef) x86_64</operatingSystem><username>klye</username><host>nid03073</host><standardCLibrary>GNU libc 2.22 stable</standardCLibrary><generatedAt>20190905T134433</generatedAt><CPU>Intel(R) Xeon(R) CPU E5-2690 v3 @ 2.60GHz</CPU><revision>1ecc2374d6c8618b8e01e65bf7fd4c4bbfb95b7e</revision><versionControlStatus>DIRTY</versionControlStatus><buildType>Release</buildType><cxxFlags/><cxxFlagsDebug>-g</cxxFlagsDebug><cxxFlagsRelease>-O3 -DNDEBUG</cxxFlagsRelease><cxxFlagsMinSizeRel>-Os -DNDEBUG</cxxFlagsMinSizeRel><cxxFlagsRelWithDebInfo>-O2 -g -DNDEBUG</cxxFlagsRelWithDebInfo><cudaFlags>--use_fast_math -Xptxas -warn-spills -gencode arch=compute_50,code=sm_50 -gencode arch=compute_60,code=sm_60  -gencode arch=compute_61,code=sm_61</cudaFlags><cudaVersion>9.2</cudaVersion><cxxCompiler>GNU 6.2.0</cxxCompiler><cudaCompiler>NVIDIA 9.2.148</cudaCompiler><boost><BOOST_VERSION>107000</BOOST_VERSION><BOOST_LIB_VERSION>1_70</BOOST_LIB_VERSION><BOOST_PLATFORM>linux</BOOST_PLATFORM><BOOST_PLATFORM_CONFIG>boost/config/platform/linux.hpp</BOOST_PLATFORM_CONFIG><BOOST_COMPILER>GNU C++ version 6.2.0 20160822 (Cray Inc.)</BOOST_COMPILER><BOOST_LIBSTDCXX_VERSION>60200</BOOST_LIBSTDCXX_VERSION><C++11>true</C++11><BOOST_STDLIB>GNU libstdc++ version 20160822</BOOST_STDLIB><BOOST_STDLIB_CONFIG>boost/config/stdlib/libstdcpp3.hpp</BOOST_STDLIB_CONFIG></boost><floatingPointPrecisionDescription>double (double precision, 64 bits)</floatingPointPrecisionDescription><floatingPointType>double</floatingPointType><floatingPointMax>1.79769e+308</floatingPointMax><floatingPointMin>2.22507e-308</floatingPointMin><floatingPointEpsilon>2.22045e-16</floatingPointEpsilon><cudaProperties><name>Tesla P100-PCIE-16GB</name><totalGlobalMem>17071734784</totalGlobalMem><sharedMemPerBlock>49152</sharedMemPerBlock><regsPerBlock>65536</regsPerBlock><warpSize>32</warpSize><memPitch>2147483647</memPitch><maxThreadsPerBlock>1024</maxThreadsPerBlock><maxThreadsDim>1024, 1024, 64</maxThreadsDim><maxGridSize>2147483647, 65535, 65535</maxGridSize><totalConstMem>65536</totalConstMem><major>6</major><minor>0</minor><clockRate>1328500</clockRate><textureAlignment>512</textureAlignment><deviceOverlap>1</deviceOverlap><multiProcessorCount>56</multiProcessorCount><kernelExecTimeoutEnabled>0</kernelExecTimeoutEnabled><integrated>0</integrated><canMapHostMemory>1</canMapHostMemory><computeMode>3</computeMode><concurrentKernels>1</concurrentKernels><ECCEnabled>1</ECCEnabled><pciBusID>2</pciBusID><pciDeviceID>0</pciDeviceID><tccDriver>0</tccDriver></cudaProperties><mpiEnabled>true</mpiEnabled><mpiProcesses>1</mpiProcesses><mpiVersion>MPI VERSION    : CRAY MPICH version 7.7.2 (ANL base 3.2)
MPI BUILD INFO : Built Thu Jul 19 20:01:04 2018 (git hash 5d705bad2) MT-G</mpiVersion><ompEnabled>true</ompEnabled><ompThreads>1</ompThreads><loadedTextFiles><_dash_scratch_dash_snx3000_dash_klye_dash_alsvinn_metrics_dash_configs_dash_nx_16_dash_kelvinhelmholtz_3d_tube_dash_kelvinhelmholtz_DOT_py>def init_global(rho, ux, uy, uz, p, nx, ny, nz, ax, ay, az, bx, by, bz):
    N = len(a)//6
    a1 = a[:N]
    a2 = a[N:2*N]
    a3 = a[2*N:3*N]
    b1 = a[3*N:4*N]
    b2 = a[4*N:5*N]
    b3 = a[5*N:6*N]

    perturbation = 0.1
    normalization1 = sum(a1)
    if abs(normalization1) &lt; 1e-10:
        normalization1 = 1
    normalization2 = sum(a2)
    if abs(normalization2) &lt; 1e-10:
        normalization2 = 1

    x = linspace(ax, bx, nx)
    y = linspace(ay, by, ny)
    z = linspace(az, bz, nz)
    Y, X, Z = meshgrid(y, x, z)
    X = X
    Y = Y
    Z = Z

    R = sqrt((Y - 0.5)**2 + (Z - 0.5)**2)

    Theta = arctan2(Z, Y)
    perturbation_radius = perturbation*sum([a1[i]*cos(2*pi*(i+1)*(R+b1[i])) for i in range(len(a1))], 0)/normalization1
    perturbation_radius += perturbation*sum([a2[i]*cos(2*pi*(i+1)*(Theta+b2[i])) for i in range(len(a2))], 0)/normalization2
    perturbation_radius += perturbation*sum([a3[i]*cos(2*pi*(i+1)*(X+b3[i])) for i in range(len(a3))], 0)/normalization2
    perturbation_radius /= 2

    middle = (R &lt; 0.25 + perturbation_radius)

    rho[:, :, :] = 2.0 * middle + 1.0*(1-middle)
    ux[:, :, :] = -0.5*middle + 0.5*(1-middle)
    uy[:,:,:] = zeros_like(X)
    uz[:,:,:] = zeros_like(X)
    p[:,:,:] = 2.5*ones_like(X)
</_dash_scratch_dash_snx3000_dash_klye_dash_alsvinn_metrics_dash_configs_dash_nx_16_dash_kelvinhelmholtz_3d_tube_dash_kelvinhelmholtz_DOT_py><_dash_scratch_dash_snx3000_dash_klye_dash_alsvinn_metrics_dash_configs_dash_nx_16_dash_kelvinhelmholtz_3d_tube_dash_kelvinhelmholtz_DOT_xml>&lt;config&gt;
&lt;fvm&gt;
  &lt;name&gt;
    kh
  &lt;/name&gt;
  &lt;platform&gt;cuda&lt;/platform&gt;
  &lt;grid&gt;
    &lt;lowerCorner&gt;0 0 0&lt;/lowerCorner&gt;
    &lt;upperCorner&gt;1 1 1&lt;/upperCorner&gt;
    &lt;dimension&gt;16 16 16&lt;/dimension&gt;
  &lt;/grid&gt;
  &lt;boundary&gt;periodic&lt;/boundary&gt;
  &lt;flux&gt;hll3&lt;/flux&gt;
  &lt;endTime&gt;0.02&lt;/endTime&gt;
  &lt;equation&gt;euler3&lt;/equation&gt;
  &lt;equationParameters&gt;
    &lt;gamma&gt;1.4&lt;/gamma&gt;
  &lt;/equationParameters&gt;
  &lt;reconstruction&gt;weno2&lt;/reconstruction&gt;
  &lt;cfl&gt;auto&lt;/cfl&gt;
  &lt;integrator&gt;forwardeuler&lt;/integrator&gt;
  &lt;functionals&gt;


  &lt;/functionals&gt;
  &lt;initialData&gt;
    &lt;python&gt;kelvinhelmholtz.py&lt;/python&gt;
    &lt;parameters&gt;
      &lt;parameter&gt;
        &lt;name&gt;a&lt;/name&gt;
        &lt;length&gt;60&lt;/length&gt;
        &lt;values&gt;&lt;value&gt;0&lt;/value&gt;&lt;/values&gt;
      &lt;/parameter&gt;
    &lt;/parameters&gt;
  &lt;/initialData&gt;
  &lt;diffusion&gt;
    &lt;name&gt;none&lt;/name&gt;
    &lt;reconstruction&gt;none&lt;/reconstruction&gt;
  &lt;/diffusion&gt;
&lt;/fvm&gt;
&lt;uq&gt;
  &lt;samples&gt;1&lt;/samples&gt;
  &lt;generator&gt;auto&lt;/generator&gt;
  &lt;parameters&gt;
    &lt;parameter&gt;
      &lt;name&gt;a&lt;/name&gt;
      &lt;length&gt;60&lt;/length&gt;
      &lt;type&gt;uniform&lt;/type&gt;
    &lt;/parameter&gt;
  &lt;/parameters&gt;
  &lt;stats&gt;
  &lt;/stats&gt;
&lt;/uq&gt;
&lt;/config&gt;
</_dash_scratch_dash_snx3000_dash_klye_dash_alsvinn_metrics_dash_configs_dash_nx_16_dash_kelvinhelmholtz_3d_tube_dash_kelvinhelmholtz_DOT_xml></loadedTextFiles><pythonVersion>Runtime: 3.6.5 (default, Oct  8 2018, 17:39:55) 
[GCC 7.3.0 20180125 (Cray Inc.)], compile time: 3.6.5</pythonVersion><alsvinnInDocker>false</alsvinnInDocker><timings><allTimedEvents><totalTime>58.232718550999998</totalTime><percentOfProgramTotalTime>100</percentOfProgramTotalTime><hasIndividualTimeData>false</hasIndividualTimeData><alsvinn><totalTime>58.232718550999998</totalTime><percentOfProgramTotalTime>100</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData><fvm><totalTime>46.753881742000004</totalTime><percentOfProgramTotalTime>81</percentOfProgramTotalTime><hasIndividualTimeData>false</hasIndividualTimeData><init><totalTime>0.42040882000000002</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>false</hasIndividualTimeData><python><totalTime>0.42040882000000002</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData><evaluation><totalTime>0.000956996</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData></evaluation><init_global><totalTime>0.0043411389999999999</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData></init_global></python></init><numflux><totalTime>37.636801280000007</totalTime><percentOfProgramTotalTime>65</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData></numflux><reconstruction><totalTime>8.6966716420000001</totalTime><percentOfProgramTotalTime>15</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData></reconstruction></fvm><mpi><totalTime>0.00082958599999999989</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>false</hasIndividualTimeData><exchange><totalTime>0.00082958599999999989</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData><wait><totalTime>8.7729999999999988e-06</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData></wait></exchange></mpi><uq><totalTime>0.010440059</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>false</hasIndividualTimeData><generate><totalTime>1.0903e-05</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData></generate><init><totalTime>0.010429156</totalTime><percentOfProgramTotalTime>1</percentOfProgramTotalTime><hasIndividualTimeData>true</hasIndividualTimeData></init></uq></alsvinn></allTimedEvents></timings><executable>alsuqcli</executable><name>kh</name><endTime>20190905T134433</endTime><cpuDuration>57957</cpuDuration><cpuDurationHuman>00:00:57</cpuDurationHuman><wallTime>58000</wallTime><wallTimeHuman>00:00:58</wallTimeHuman><timesteps>5</timesteps><command>/users/klye/alsvinn/build/alsuqcli/alsuqcli kelvinhelmholtz_3d_tube/kelvinhelmholtz.xml </command></report>